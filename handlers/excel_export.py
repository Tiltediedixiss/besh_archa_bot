from aiogram import types
from aiogram.dispatcher import Dispatcher
from data.excel_exporter import excel_exporter
from data.progress import progress_manager
import os

def register_excel_export(dp: Dispatcher):
    @dp.message_handler(commands=["export_progress"])
    async def export_progress_command(message: types.Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /export_progress –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Excel"""
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
        if not progress_manager.is_admin(user_id):
            await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö. –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
            return
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —ç–∫—Å–ø–æ—Ä—Ç–∞
            status_msg = await message.answer("üìä –ù–∞—á–∏–Ω–∞—é —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            
            # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Excel
            filepath = excel_exporter.export_user_progress()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
            with open(filepath, 'rb') as file:
                await message.answer_document(
                    file,
                    caption="üìà –û—Ç—á–µ—Ç –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥–æ—Ç–æ–≤!\n\n"
                           "–§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç:\n"
                           "‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
                           "‚Ä¢ –î–µ—Ç–∞–ª–∏ –ø–æ –º–æ–¥—É–ª—è–º\n"
                           "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –¥–Ω—è–º\n"
                           "‚Ä¢ –°–≤–æ–¥–∫—É –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –ø—Ä–æ–≥—Ä–∞–º–º—ã"
                )
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
            await status_msg.delete()
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            try:
                os.remove(filepath)
            except:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
                
        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
    
    @dp.message_handler(commands=["clean_reports"])
    async def clean_reports_command(message: types.Message):
        """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ XLSX –∏–∑ –ø–∞–ø–∫–∏ reports (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)."""
        user_id = message.from_user.id
        if not progress_manager.is_admin(user_id):
            await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏.")
            return

        reports_dir = "reports"
        if not os.path.isdir(reports_dir):
            await message.answer("üìÅ –ü–∞–ø–∫–∞ reports –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –æ—á–∏—â–∞—Ç—å –Ω–µ—á–µ–≥–æ.")
            return

        removed = 0
        for name in os.listdir(reports_dir):
            if name.lower().endswith(".xlsx"):
                path = os.path.join(reports_dir, name)
                try:
                    os.remove(path)
                    removed += 1
                except Exception:
                    pass

        await message.answer(f"üßπ –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {removed}")

    @dp.message_handler(commands=["export_feedbacks"])
    async def export_feedbacks_command(message: types.Message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª feedback_day4.csv –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º."""
        user_id = message.from_user.id
        if not progress_manager.is_admin(user_id):
            await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞. –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
            return

        csv_path = "feedback_day4.csv"
        if not os.path.exists(csv_path) or os.path.getsize(csv_path) == 0:
            await message.answer("üì≠ –û—Ç–∑—ã–≤—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç: —Ñ–∞–π–ª feedback_day4.csv –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        try:
            with open(csv_path, 'rb') as f:
                await message.answer_document(f, caption="–û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (CSV)")
        except Exception as e:
            await message.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª: {str(e)}")

    @dp.message_handler(commands=["progress_stats"])
    async def progress_stats_command(message: types.Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /progress_stats –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
        if not progress_manager.is_admin(user_id):
            await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            all_progress = progress_manager.get_all_users_progress()
            total_users = len(all_progress)
            
            if total_users == 0:
                await message.answer("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö.")
                return
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ get_all_users_progress)
            day1_completed = sum(1 for user in all_progress if user.get('Day 1 Status') == 'completed')
            day2_completed = sum(1 for user in all_progress if user.get('Day 2 Status') == 'completed')
            day3_completed = sum(1 for user in all_progress if user.get('Day 3 Status') == 'completed')
            day4_completed = sum(1 for user in all_progress if user.get('Day 4 Status') == 'completed')
            
            admins = sum(1 for user in all_progress if user.get('Is Admin', False))
            
            # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã –¥–ª—è Markdown –∏ –∏–∑–±–µ–≥–∞–µ–º –ø—Ä–æ–±–ª–µ–º —Å —Å—É—â–Ω–æ—Å—Ç—è–º–∏
            d1p = f"{day1_completed/total_users*100:.1f}%".replace('%', '\\%')
            d2p = f"{day2_completed/total_users*100:.1f}%".replace('%', '\\%')
            d3p = f"{day3_completed/total_users*100:.1f}%".replace('%', '\\%')
            d4p = f"{day4_completed/total_users*100:.1f}%".replace('%', '\\%')

            stats_text = (
                "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
                f"üë• –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
                f"üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {admins}\n\n"
                "üìÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –¥–Ω—è–º:\n"
                f"‚Ä¢ –î–µ–Ω—å 1: {day1_completed}/{total_users} ({d1p})\n"
                f"‚Ä¢ –î–µ–Ω—å 2: {day2_completed}/{total_users} ({d2p})\n"
                f"‚Ä¢ –î–µ–Ω—å 3: {day3_completed}/{total_users} ({d3p})\n"
                f"‚Ä¢ –î–µ–Ω—å 4: {day4_completed}/{total_users} ({d4p})\n\n"
                "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /export_progress –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ Excel"
            )

            await message.answer(stats_text)
            
        except Exception as e:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}") 