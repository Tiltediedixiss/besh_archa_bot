from aiogram import types
from aiogram.dispatcher import Dispatcher
from data.progress import progress_manager

def register_progress(dp: Dispatcher):
    @dp.message_handler(commands=['progress'])
    async def show_progress(message: types.Message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏"""
        user_id = message.from_user.id
        progress_summary = progress_manager.get_progress_summary(user_id)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–µ–¥—É—é—â–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–º –¥–Ω–µ
        next_day = progress_manager.get_next_available_day(user_id)
        if next_day > 1:
            progress_summary += f"\nüéØ *–°–ª–µ–¥—É—é—â–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –¥–µ–Ω—å:* {next_day}"
        
        await message.reply(progress_summary, parse_mode='Markdown')
    
    @dp.message_handler(commands=['reset_progress'])
    async def reset_progress(message: types.Message):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
        user_id = message.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
        from main import ADMIN_ID
        if user_id == ADMIN_ID:
            progress_manager.reset_user_progress(user_id)
            await message.reply("‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–±—Ä–æ—à–µ–Ω. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
        else:
            await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.")
    
    @dp.message_handler(commands=['check_admin'])
    async def check_admin(message: types.Message):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_id = message.from_user.id
        
        if progress_manager.is_admin(user_id):
            await message.reply("‚úÖ –í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º! –£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –¥–Ω—è–º.")
        else:
            await message.reply("‚ùå –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
    
    @dp.message_handler(commands=['force_admin_update'])
    async def force_admin_update(message: types.Message):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∞–¥–º–∏–Ω–∞ –∫–æ –≤—Å–µ–º –¥–Ω—è–º"""
        user_id = message.from_user.id
        
        if progress_manager.is_admin(user_id):
            progress_manager.force_update_admin_access(user_id)
            await message.reply("‚úÖ –î–æ—Å—Ç—É–ø –∞–¥–º–∏–Ω–∞ –∫–æ –≤—Å–µ–º –¥–Ω—è–º –æ–±–Ω–æ–≤–ª–µ–Ω! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–∏–¥–µ—Ç—å –≤—Å–µ 4 –¥–Ω—è.")
        else:
            await message.reply("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
    
    @dp.message_handler(commands=['next_day'])
    async def next_day_info(message: types.Message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–µ–¥—É—é—â–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–º –¥–Ω–µ"""
        user_id = message.from_user.id
        next_day = progress_manager.get_next_available_day(user_id)
        
        from data.texts import ADAPTATION_PROGRAM
        day_key = f"day_{next_day}"
        
        if day_key in ADAPTATION_PROGRAM:
            day_info = ADAPTATION_PROGRAM[day_key]
            modules = "\n".join([f"‚Ä¢ {module}" for module in day_info["modules"]])
            
            response = f"üìÖ *{day_info['title']}*\n\n"
            response += f"üéØ *–ú–æ–¥—É–ª–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è:*\n{modules}\n\n"
            
            if next_day == 1:
                response += "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–¥–∞–ø—Ç–∞—Ü–∏—é! –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–≤—ã–π –º–æ–¥—É–ª—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é."
            else:
                response += f"üîì –≠—Ç–æ—Ç –¥–µ–Ω—å —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–Ω—è {next_day - 1}."
            
            await message.reply(response, parse_mode='Markdown')
        else:
            await message.reply("‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–Ω–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.") 