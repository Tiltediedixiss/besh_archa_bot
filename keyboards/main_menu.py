from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from data.progress import progress_manager

def start_keyboard():
    kb = InlineKeyboardMarkup(row_width=2)
    kb.add(
        InlineKeyboardButton("–î–∞, –ø–æ–µ—Ö–∞–ª–∏", callback_data="ceo_greeting"),
        InlineKeyboardButton("–ü–æ–∑–∂–µ", callback_data="later")
    )
    return kb

def ceo_greeting_keyboard():
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="legend_start"))
    return kb

def legend_keyboard():
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("–î–∞, —Ä–∞—Å—Å–∫–∞–∂–∏!", callback_data="legend_next_1"))
    return kb

def legend_next_keyboard(step, total):
    kb = InlineKeyboardMarkup()
    if step < total - 2:
        kb.add(InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data=f"legend_next_{step+1}"))
    elif step == total - 2:
        kb.add(InlineKeyboardButton("–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è", callback_data="modern_history"))
    return kb

def modern_history_keyboard():
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("–î–∞–ª—å—à–µ", callback_data="video_legend_offer"))
    return kb

def legend_to_modern_history_keyboard():
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è", callback_data="modern_history"))
    return kb

def main_menu_keyboard(user_id: int = None):
    """–£–º–Ω–∞—è –≥–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è —É—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    kb = InlineKeyboardMarkup(row_width=2)
    
    # –ë–∞–∑–æ–≤—ã–µ —Ä–∞–∑–¥–µ–ª—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Å–µ–≥–¥–∞
    kb.add(InlineKeyboardButton("üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å", callback_data="show_progress"))
    kb.add(InlineKeyboardButton("‚ÑπÔ∏è –û –∫–æ–º–ø–∞–Ω–∏–∏", callback_data="company_info"))
    
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω user_id, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    if user_id:
        progress = progress_manager.get_user_progress(user_id)
        current_day = progress.get("current_day", 1)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
        is_admin = progress_manager.is_admin(user_id)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–Ω–∏
        for day in range(1, 5):
            day_key = f"day_{day}"
            if day_key in progress["day_progress"]:
                status = progress["day_progress"][day_key]["status"]
                
                if status == "completed":
                    kb.add(InlineKeyboardButton(f"‚úÖ –î–µ–Ω—å {day} (–ó–∞–≤–µ—Ä—à–µ–Ω)", callback_data=f"day_{day}_start"))
                elif status in ["in_progress", "available"]:
                    kb.add(InlineKeyboardButton(f"üîÑ –î–µ–Ω—å {day}", callback_data=f"day_{day}_start"))
                elif is_admin:
                    # –ê–¥–º–∏–Ω—ã –≤–∏–¥—è—Ç –≤—Å–µ –¥–Ω–∏, –¥–∞–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
                    kb.add(InlineKeyboardButton(f"üîí –î–µ–Ω—å {day}", callback_data=f"day_{day}_start"))
                # –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –≤–∏–¥—è—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–Ω–∏
    
    # –ï—Å–ª–∏ user_id –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –º–µ–Ω—é
    else:
        kb.add(InlineKeyboardButton("üèõÔ∏è –õ–µ–≥–µ–Ω–¥–∞", callback_data="legend"))
        kb.add(InlineKeyboardButton("üìú –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è", callback_data="modern_history"))
        kb.add(InlineKeyboardButton("üéØ –ú–∏—Å—Å–∏—è –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏", callback_data="mission"))
        kb.add(InlineKeyboardButton("üë®‚Äçüíº –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ CEO", callback_data="ceo_greeting"))
        kb.add(InlineKeyboardButton("üì∞ –ù–æ–≤–æ—Å—Ç–∏", callback_data="news"))
        kb.add(InlineKeyboardButton("üìã –í–∞–∂–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", callback_data="important_docs"))
    
    return kb

def smart_day_menu_keyboard(user_id: int, day: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–Ω—è —Å —É—á–µ—Ç–æ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
    kb = InlineKeyboardMarkup(row_width=1)
    
    progress = progress_manager.get_user_progress(user_id)
    day_key = f"day_{day}"
    
    if day_key in progress["day_progress"]:
        day_data = progress["day_progress"][day_key]
        completed_modules = day_data["completed_modules"]
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥—É–ª–∏ –¥–Ω—è
        from data.texts import ADAPTATION_PROGRAM
        if day_key in ADAPTATION_PROGRAM:
            for module in ADAPTATION_PROGRAM[day_key]["modules"]:
                if module in completed_modules:
                    kb.add(InlineKeyboardButton(f"‚úÖ {module}", callback_data=f"module_{day}_{module}_start"))
                else:
                    kb.add(InlineKeyboardButton(f"üìö {module}", callback_data=f"module_{day}_{module}_start"))
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if progress_manager.is_admin(user_id):
        kb.add(InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    
    if day > 1:
        prev_day_status = progress["day_progress"].get(f"day_{day-1}", {}).get("status", "locked")
        if prev_day_status in ["completed", "available", "in_progress"] or progress_manager.is_admin(user_id):
            kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å", callback_data=f"day_{day-1}_start"))
    
    if day < 4:
        next_day_status = progress["day_progress"].get(f"day_{day+1}", {}).get("status", "locked")
        if next_day_status in ["available", "in_progress"] or progress_manager.is_admin(user_id):
            kb.add(InlineKeyboardButton("‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å", callback_data=f"day_{day+1}_start"))
    
    return kb

def today_plan_keyboard():
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å —á–µ–∫-–ª–∏—Å—Ç –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å", callback_data="show_checklist"))
    return kb

def start_next_day_keyboard(next_day: int):
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(InlineKeyboardButton(f"üöÄ –ù–∞—á–∞—Ç—å –¥–µ–Ω—å {next_day}", callback_data=f"day_{next_day}_start"))
    return kb

def video_legend_keyboard(user_id: int = None):
    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(InlineKeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫", callback_data="video_legend_russian"))
    kb.add(InlineKeyboardButton("üá∞üá¨ –ö—ã—Ä–≥—ã–∑ —Ç–∏–ª–∏", callback_data="video_legend_kyrgyz"))
    kb.add(InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_videos"))
    
    # –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if user_id:
        if progress_manager.is_admin(user_id):
            kb.add(InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    
    return kb

def day_completion_keyboard(user_id: int = None):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–Ω—è —Å –∫–Ω–æ–ø–∫–æ–π '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤"""
    kb = InlineKeyboardMarkup(row_width=1)
    
    # –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if user_id:
        if progress_manager.is_admin(user_id):
            kb.add(InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))
    
    return kb 